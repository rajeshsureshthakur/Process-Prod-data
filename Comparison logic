private static void updateARTDetailsFile(String outputPath, List<ARTDetail> artDetails) throws IOException {
    Map<String, ARTDetail> namData = new HashMap<>();
    Map<String, ARTDetail> idlData = new HashMap<>();
    Set<String> allArtNames = new TreeSet<>();
    boolean hasUpdates = false;
    
    // Read existing file data
    if (Files.exists(Paths.get(outputPath))) {
        List<String> existingLines = Files.readAllLines(Paths.get(outputPath));
        if (existingLines.size() > 1) {
            for (int i = 1; i < existingLines.size(); i++) {
                String[] values = parseCSVLine(existingLines.get(i));
                if (values.length >= 5) {
                    String artName = values[0].trim();
                    allArtNames.add(artName);
                    
                    // Parse NAM value
                    if (!values[1].trim().isEmpty() && !values[1].trim().equals("0.00")) {
                        try {
                            double namTph = Double.parseDouble(values[1].trim());
                            String namDateTime = values[2].trim();
                            namData.put(artName, new ARTDetail(artName, namTph, namDateTime, true));
                            System.out.println("Read existing NAM value for " + artName + ": " + namTph);
                        } catch (NumberFormatException e) {
                            System.out.println("Error parsing NAM TPH value for " + artName + ": " + values[1]);
                        }
                    }
                    
                    // Parse IDL value
                    if (!values[3].trim().isEmpty() && !values[3].trim().equals("0.00")) {
                        try {
                            double idlTph = Double.parseDouble(values[3].trim());
                            String idlDateTime = values[4].trim();
                            idlData.put(artName, new ARTDetail(artName, idlTph, idlDateTime, false));
                            System.out.println("Read existing IDL value for " + artName + ": " + idlTph);
                        } catch (NumberFormatException e) {
                            System.out.println("Error parsing IDL TPH value for " + artName + ": " + values[3]);
                        }
                    }
                }
            }
        }
    }

    // Process new values
    for (ARTDetail detail : artDetails) {
        allArtNames.add(detail.artName);
        if (detail.isNAM) {
            ARTDetail existing = namData.get(detail.artName);
            System.out.println("Checking NAM value for " + detail.artName + 
                             ": New=" + String.format("%.2f", detail.peakValue) + 
                             " Old=" + (existing != null ? String.format("%.2f", existing.peakValue) : "0.00"));
            
            if (existing == null || detail.peakValue > (existing.peakValue + 0.01)) {
                namData.put(detail.artName, detail);
                hasUpdates = true;
                System.out.println("Updated NAM value for " + detail.artName + 
                                 " from " + (existing != null ? String.format("%.2f", existing.peakValue) : "0.00") + 
                                 " to " + String.format("%.2f", detail.peakValue));
            }
        } else {
            ARTDetail existing = idlData.get(detail.artName);
            System.out.println("Checking IDL value for " + detail.artName + 
                             ": New=" + String.format("%.2f", detail.peakValue) + 
                             " Old=" + (existing != null ? String.format("%.2f", existing.peakValue) : "0.00"));
            
            if (existing == null || detail.peakValue > (existing.peakValue + 0.01)) {
                idlData.put(detail.artName, detail);
                hasUpdates = true;
                System.out.println("Updated IDL value for " + detail.artName + 
                                 " from " + (existing != null ? String.format("%.2f", existing.peakValue) : "0.00") + 
                                 " to " + String.format("%.2f", detail.peakValue));
            }
        }
    }

    // Write updates only if there are changes
    if (hasUpdates || !Files.exists(Paths.get(outputPath))) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(outputPath))) {
            writer.write("ART,NAM_TPH,NAM_DateTime,IDL_TPH,IDL_DateTime");
            writer.newLine();

            for (String artName : allArtNames) {
                StringBuilder row = new StringBuilder(artName);
                
                ARTDetail namDetail = namData.get(artName);
                if (namDetail != null) {
                    row.append(",").append(String.format("%.2f", namDetail.peakValue))
                       .append(",").append(namDetail.dateTime);
                } else {
                    row.append(",0.00,");
                }
                
                ARTDetail idlDetail = idlData.get(artName);
                if (idlDetail != null) {
                    row.append(",").append(String.format("%.2f", idlDetail.peakValue))
                       .append(",").append(idlDetail.dateTime);
                } else {
                    row.append(",0.00,");
                }
                
                writer.write(row.toString());
                writer.newLine();
            }
            System.out.println("ART details file updated with new values");
        }
    } else {
        System.out.println("No updates needed for ART details file - all new values are lower than existing peaks");
    }
}
